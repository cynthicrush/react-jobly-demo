{"version":3,"sources":["auth/UserContext.js","NavBar.js","Api.js","helpers/LocalStorage.js","Homepage.js","helpers/Alert.js","auth/SignupForm.js","auth/LoginForm.js","companies/CompanyCard.js","companies/CompanyList.js","SearchForm.js","companies/CompanyPage.js","jobs/JobCard.js","jobs/JobList.js","jobs/JobPage.js","profiles/ProfileForm.js","companies/CompanyDetail.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","React","createContext","NavBar","_ref","logout","currentUser","useContext","console","debug","react_default","a","createElement","className","react_router_dom","to","onClick","first_name","username","JoblyApi","endpoint","data","method","url","process","headers","Authorization","concat","token","params","axios","error","_context","t0","response","message","Array","isArray","this","request","name","companies","handle","company","title","jobs","user","id","LocalStorage","key","firstValue","arguments","length","undefined","initialValue","localStorage","getItem","_useState","useState","_useState2","Object","slicedToArray","item","setItem","useEffect","removeItem","Homepage","firstName","Alert","_ref$type","type","_ref$messages","messages","role","map","SignupForm","signup","password","lastName","email","formData","setFormData","_useState3","_useState4","formErrors","setFormErrors","history","useNavigate","handleSubmit","_x","_handleSubmit","apply","asyncToGenerator","SignupForm_regeneratorRuntime","mark","_callee","event","result","wrap","prev","next","preventDefault","sent","success","errors","stop","handleChange","_event$target","target","value","objectSpread","defineProperty","onSubmit","onChange","helpers_Alert","LoginForm","login","LoginForm_regeneratorRuntime","CompanyCard","description","logo_url","src","alt","CompanyList","c","companies_CompanyCard","logoUrl","SearchForm","content","seachTerm","setSearchTerm","trim","CompanyPage","setCompanies","search","_search","CompanyPage_regeneratorRuntime","_callee2","_context2","getCompanies","_getCompanies","getAllCompanies","src_SearchForm","companies_CompanyList","JobCard","salary","equity","companyName","applied","setApplied","_useContext","hasAppliedToJob","applyToJob","_handleClick","JobCard_regeneratorRuntime","abrupt","disabled","JobList","job","jobs_JobCard","Fragment","JobPage","setJobs","JobPage_regeneratorRuntime","getJobs","_getJobs","getAllJobs","jobs_JobList","ProfileForm","setCurrentUser","setFormError","_useState5","_useState6","saveConfirmed","setSaveConfirmed","ProfileForm_regeneratorRuntime","updateUserProfile","saveProfile","d","CompanyDetail","useParams","setCompany","_getCompany","CompanyDetail_regeneratorRuntime","getCompany","TOKEN_STORAGE_ID","App","_LocalStorage","_LocalStorage2","setToken","Set","applicationIds","setApplicationIds","_signup","App_regeneratorRuntime","_token","_login","_callee3","_token2","_context3","has","_getCurrentUser","_jwt$decode","_currentUser","jwt","decode","getCurrentUser","auth_UserContext","Provider","toConsumableArray","src_NavBar","react_router","exact","path","element","src_Homepage","auth_SignupForm","auth_LoginForm","_x2","companies_CompanyPage","companies_CompanyDetail","jobs_JobPage","profiles_ProfileForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iiBAIeA,EAFKC,IAAMC,gBCqDXC,MAnDf,SAAAC,GAA0B,IAATC,EAASD,EAATC,OACLC,EAAgBC,qBAAWP,GAA3BM,YAGR,OAFAE,QAAQC,MAAM,aAAc,eAAgBH,GAGxCI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,eAAeE,GAAG,KAAlC,SAGCT,EAEKI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASD,UAAU,WAAWE,GAAG,cAAjC,cAIJL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASD,UAAU,WAAWE,GAAG,SAAjC,SAIJL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASD,UAAU,WAAWE,GAAG,YAAjC,YAIJL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,IAAIC,QAASX,GAA3C,WACSC,EAAYW,YAAcX,EAAYY,YAKrDR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASD,UAAU,WAAWE,GAAG,UAAjC,WAIJL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASD,UAAU,WAAWE,GAAG,WAAjC,61MC3CxB,IAyEeI,+IApEUC,sGAAUC,iCAAO,GAAIC,iCAAS,MAC/Cd,QAAQC,MAAM,YAAaW,EAAUC,EAAMC,GAErCC,YARGC,4DAQkBJ,GACrBK,EAAU,CAAEC,cAAa,UAAAC,OAAYR,EAASS,QAC9CC,EAAqB,QAAXP,EACVD,EACA,qBAGUS,IAAM,CAAEP,MAAKD,SAAQD,OAAMQ,SAAQJ,mDAAYJ,8CAE7Db,QAAQuB,MAAM,aAAcC,EAAAC,GAAIC,UAC5BC,EAAUH,EAAAC,GAAIC,SAASb,KAAKU,MAAMI,QAChCC,MAAMC,QAAQF,GAAWA,EAAU,CAACA,uLAI5Bd,yFACKiB,KAAKC,QAAQ,gBAAiBlB,EAAM,sBAArDa,2BACGA,EAASN,gLAGDP,yFACMiB,KAAKC,QAAQ,aAAclB,EAAM,sBAAlDa,2BACGA,EAASN,uLAGMY,yFACDF,KAAKC,QAAQ,YAAa,CAACC,uBAA5CN,2BACGA,EAASO,sRAIKH,KAAKC,QAAQ,2BAA9BL,2BACGA,EAASO,wLAGIC,yFACCJ,KAAKC,QAAL,aAAAZ,OAA0Be,kBAA3CR,2BACGA,EAASS,oLAGCC,yFACIN,KAAKC,QAAQ,OAAQ,CAACK,wBAAvCV,2BACGA,EAASW,4QAIKP,KAAKC,QAAQ,sBAA9BL,2BACGA,EAASW,uLAGQ3B,yFACHoB,KAAKC,QAAL,SAAAZ,OAAsBT,kBAAvCgB,2BACGA,EAASY,oLAGI5B,EAAU6B,mFACxBT,KAAKC,QAAL,SAAAZ,OAAsBT,EAAtB,UAAAS,OAAuCoB,GAAM,GAAI,yLAGlC7B,EAAUG,yFACViB,KAAKC,QAAL,SAAAZ,OAAsBT,GAAYG,EAAM,uBAAzDa,2BACGA,EAASY,oHCnDTE,MAlBf,SAAsBC,GAAwB,IAAnBC,EAAmBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KAC9BG,EAAeC,aAAaC,QAAQP,IAAQC,EADRO,EAGlBC,mBAASJ,GAHSK,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGnCK,EAHmCH,EAAA,GAG7BI,EAH6BJ,EAAA,GAe1C,OAVAK,oBAAU,WACRxD,QAAQC,MAAM,kCAAmC,QAASqD,GAE7C,OAATA,EACFP,aAAaU,WAAWhB,GAExBM,aAAaQ,QAAQd,EAAKa,IAE3B,CAACb,EAAKa,IAEF,CAACA,EAAMC,ICWHG,MAxBf,WAAoB,IACR5D,EAAgBC,qBAAWP,GAA3BM,YAGR,OAFAE,QAAQC,MAAM,aAAc,eAAgBH,GAGxCI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,SACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,0CACCP,EACKI,EAAAC,EAAAC,cAAA,4BAAoBN,EAAY6D,UAAhC,KAEEzD,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,wCAAwCE,GAAG,UAA3D,UACAL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,wCAAwCE,GAAG,WAA3D,+BCJbqD,MAZf,SAAAhE,GAAkD,IAAAiE,EAAAjE,EAAjCkE,YAAiC,IAAAD,EAA1B,SAA0BA,EAAAE,EAAAnE,EAAhBoE,gBAAgB,IAAAD,EAAL,GAAKA,EAC9C,OACI7D,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAc,OAAiB2C,GAAQG,KAAK,SACzCD,EAASE,IAAI,SAAA3C,GAAK,OACfrB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaoC,IAAKlB,GAC5BA,wxMCiGF4C,MApGf,SAAAvE,GAAgC,IAAVwE,EAAUxE,EAAVwE,OAAUnB,EACIC,mBAAS,CACrCxC,SAAU,GACV2D,SAAU,GACVV,UAAW,GACXW,SAAU,GACVC,MAAO,KANiBpB,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACrBuB,EADqBrB,EAAA,GACXsB,EADWtB,EAAA,GAAAuB,EASQxB,mBAAS,IATjByB,EAAAvB,OAAAC,EAAA,EAAAD,CAAAsB,EAAA,GASrBE,EATqBD,EAAA,GASTE,EATSF,EAAA,GAUtBG,EAAUC,cAVY,SAYbC,EAZaC,GAAA,OAAAC,EAAAC,MAAArD,KAAAa,WAAA,SAAAuC,IAAA,OAAAA,EAAA9B,OAAAgC,EAAA,EAAAhC,CAAAiC,IAAAC,KAY5B,SAAAC,EAA4BC,GAA5B,IAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAlE,GAAA,cAAAA,EAAAmE,KAAAnE,EAAAoE,MAAA,cACIJ,EAAMK,iBADVrE,EAAAoE,KAAA,EAEuBxB,EAAOI,GAF9B,QAEQiB,EAFRjE,EAAAsE,MAGeC,QACPjB,EAAQ,cAERD,EAAcY,EAAOO,QAN7B,wBAAAxE,EAAAyE,SAAAV,OAZ4BJ,MAAArD,KAAAa,WAsB5B,SAASuD,EAAaV,GAAO,IAAAW,EACDX,EAAMY,OAAtBpE,EADiBmE,EACjBnE,KAAMqE,EADWF,EACXE,MACd5B,EAAY,SAAA5D,GAAI,OAAAuC,OAAAkD,EAAA,EAAAlD,CAAA,GAAUvC,EAAVuC,OAAAmD,EAAA,EAAAnD,CAAA,GAAiBpB,EAAOqE,MAG5C,OACInG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMoG,SAAUxB,GACZ9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACI4B,KAAK,WACL3B,UAAU,eACVgG,MAAO7B,EAAS9D,SAChB+F,SAAUP,KAGlBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACI4B,KAAK,WACL8B,KAAK,WACLzD,UAAU,eACVgG,MAAO7B,EAASH,SAChBoC,SAAUP,KAGlBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SACI4B,KAAK,YACL3B,UAAU,eACVgG,MAAO7B,EAASb,UAChB8C,SAAUP,KAGlBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SACI4B,KAAK,WACL3B,UAAU,eACVgG,MAAO7B,EAASF,SAChBmC,SAAUP,KAGlBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACI4B,KAAK,QACL8B,KAAK,QACLzD,UAAU,eACVgG,MAAO7B,EAASD,MAChBkC,SAAUP,KAIjBtB,EAAWhC,OACN1C,EAAAC,EAAAC,cAACsG,EAAD,CAAO5C,KAAK,SAASE,SAAUY,IAC/B,KAGN1E,EAAAC,EAAAC,cAAA,UACI0D,KAAK,SACLzD,UAAU,8BACVmG,SAAUxB,GAHd,iyMClBb2B,MArEf,SAAA/G,GAA8B,IAATgH,EAAShH,EAATgH,MAAS3D,EACMC,mBAAS,CACrCxC,SAAU,GACV2D,SAAU,KAHYlB,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnBuB,EADmBrB,EAAA,GACTsB,EADStB,EAAA,GAAAuB,EAMUxB,mBAAS,IANnByB,EAAAvB,OAAAC,EAAA,EAAAD,CAAAsB,EAAA,GAMnBE,EANmBD,EAAA,GAMPE,EANOF,EAAA,GAOpBG,EAAUC,cAPU,SASXC,EATWC,GAAA,OAAAC,EAAAC,MAAArD,KAAAa,WAAA,SAAAuC,IAAA,OAAAA,EAAA9B,OAAAgC,EAAA,EAAAhC,CAAAyD,IAAAvB,KAS1B,SAAAC,EAA4BC,GAA5B,IAAAC,EAAA,OAAAoB,IAAAnB,KAAA,SAAAlE,GAAA,cAAAA,EAAAmE,KAAAnE,EAAAoE,MAAA,cACIJ,EAAMK,iBADVrE,EAAAoE,KAAA,EAEuBgB,EAAMpC,GAF7B,QAEQiB,EAFRjE,EAAAsE,MAGeC,QACPjB,EAAQ,cAERD,EAAcY,EAAOO,QAN7B,wBAAAxE,EAAAyE,SAAAV,OAT0BJ,MAAArD,KAAAa,WAmB1B,SAASuD,EAAaV,GAAO,IAAAW,EACDX,EAAMY,OAAtBpE,EADiBmE,EACjBnE,KAAMqE,EADWF,EACXE,MACd5B,EAAY,SAAA5D,GAAI,OAAAuC,OAAAkD,EAAA,EAAAlD,CAAA,GAAUvC,EAAVuC,OAAAmD,EAAA,EAAAnD,CAAA,GAAiBpB,EAAOqE,MAG5C,OACInG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMoG,SAAUxB,GACZ9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACI4B,KAAK,WACL3B,UAAU,eACVgG,MAAO7B,EAAS9D,SAChB+F,SAAUP,KAGlBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACI4B,KAAK,WACL8B,KAAK,WACLzD,UAAU,eACVgG,MAAO7B,EAASH,SAChBoC,SAAUP,KAIjBtB,EAAWhC,OACN1C,EAAAC,EAAAC,cAACsG,EAAD,CAAO5C,KAAK,SAASE,SAAUY,IAC/B,KAGN1E,EAAAC,EAAAC,cAAA,UACI0D,KAAK,SACLzD,UAAU,8BACVmG,SAAUxB,GAHd,gBC3Cb8B,MAdf,SAAAlH,GAA4D,IAAtCoC,EAAsCpC,EAAtCoC,KAAME,EAAgCtC,EAAhCsC,OAAQ6E,EAAwBnH,EAAxBmH,YAAaC,EAAWpH,EAAXoH,SAC7C,OACI9G,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,mBAAmBE,GAAE,cAAAY,OAAgBe,IACjDhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACT2B,EACAgF,GAAY9G,EAAAC,EAAAC,cAAA,OAAK6G,IAAKD,EAAUE,IAAKlF,EAAM3B,UAAU,sBAE1DH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,aAAQ2G,OCQZI,MAhBf,SAAAvH,GAAoC,IAAbqC,EAAarC,EAAbqC,UACnB,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACV4B,EAAUiC,IAAI,SAAAkD,GAAC,OACZlH,EAAAC,EAAAC,cAACiH,EAAD,CACI5E,IAAK2E,EAAElF,OACPA,OAAQkF,EAAElF,OACVF,KAAMoF,EAAEpF,KACR+E,YAAaK,EAAEL,YACfO,QAASF,EAAEE,cCkBhBC,MA5Bf,SAAA3H,GAAiC,IAAX4H,EAAW5H,EAAX4H,QAAWvE,EACMC,mBAAS,IADfC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACtBwE,EADsBtE,EAAA,GACXuE,EADWvE,EAAA,GAa7B,OACIjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcmG,SAZtC,SAAsBhB,GAClBA,EAAMK,iBACN2B,EAAQC,EAAUE,aAAU9E,GAC5B6E,EAAcD,EAAUE,UAUhBzH,EAAAC,EAAAC,cAAA,SACIC,UAAU,2CACV2B,KAAK,aACLqE,MAAOoB,EACPhB,SAXhB,SAAsBjB,GAClBkC,EAAclC,EAAMY,OAAOC,UAYnBnG,EAAAC,EAAAC,cAAA,UAAQ0D,KAAK,SAASzD,UAAU,0BAAhC,8xMCcDuH,MAhCf,WAAuB,IAAA3E,EACeC,mBAAS,IADxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACZhB,EADYkB,EAAA,GACD0E,EADC1E,EAAA,YAeJ2E,EAfI7C,GAAA,OAAA8C,EAAA5C,MAAArD,KAAAa,WAAA,SAAAoF,IAAA,OAAAA,EAAA3E,OAAAgC,EAAA,EAAAhC,CAAA4E,IAAA1C,KAenB,SAAA2C,EAAsBjG,GAAtB,IAAAC,EAAA,OAAA+F,IAAAtC,KAAA,SAAAwC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EAC0BjF,EAASwH,aAAanG,GADhD,OACQC,EADRiG,EAAApC,KAEI+B,EAAa5F,GAFjB,wBAAAiG,EAAAjC,SAAAgC,OAfmB9C,MAAArD,KAAAa,WAoBnB,OAjBAa,oBAAU,WACNsE,KACD,IAEHtE,oBAAU,WAAM,SAAA4E,IAAA,OAAAA,EAAAhF,OAAAgC,EAAA,EAAAhC,CAAA4E,IAAA1C,KACZ,SAAAC,IAAA,IAAAtD,EAAA,OAAA+F,IAAAtC,KAAA,SAAAlE,GAAA,cAAAA,EAAAmE,KAAAnE,EAAAoE,MAAA,cAAApE,EAAAoE,KAAA,EAC0BjF,EAAS0H,kBADnC,OACQpG,EADRT,EAAAsE,KAEI+B,EAAa5F,GAFjB,wBAAAT,EAAAyE,SAAAV,OADYJ,MAAArD,KAAAa,YAAA,WAAAyF,EAAAjD,MAAArD,KAAAa,WAKZwF,KASAjI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAACkI,EAAD,CAAYd,QAASM,IACpB7F,EAAUW,OACL1C,EAAAC,EAAAC,cAACmI,EAAD,CAAatG,UAAWA,IACxB/B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,yyMCMHmI,MAlCf,SAAA5I,GAA6D,IAA1CwC,EAA0CxC,EAA1CwC,MAAOqG,EAAmC7I,EAAnC6I,OAAQC,EAA2B9I,EAA3B8I,OAAQC,EAAmB/I,EAAnB+I,YAAapG,EAAM3C,EAAN2C,GAAMU,EAC3BC,qBAD2BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClD2F,EADkDzF,EAAA,GACzC0F,EADyC1F,EAAA,GAAA2F,EAElB/I,qBAAWP,GAA1CuJ,EAFiDD,EAEjDC,gBAAiBC,EAFgCF,EAEhCE,WAFgC,SAAAC,IAAA,OAAAA,EAAA7F,OAAAgC,EAAA,EAAAhC,CAAA8F,IAAA5D,KAQzD,SAAAC,EAA2BC,GAA3B,OAAA0D,IAAAxD,KAAA,SAAAlE,GAAA,cAAAA,EAAAmE,KAAAnE,EAAAoE,MAAA,UACIJ,EAAMK,kBACHkD,EAAgBxG,GAFvB,CAAAf,EAAAoE,KAAA,eAAApE,EAAA2H,OAAA,iBAGIH,EAAWzG,GACXsG,GAAW,GAJf,wBAAArH,EAAAyE,SAAAV,OARyDJ,MAAArD,KAAAa,WAezD,OAXAa,oBAAU,WACNqF,EAAWE,EAAgBxG,KAC5B,CAACA,EAAIwG,IAUJ7I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAc+B,GAC3BuG,EACDzI,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,wBAAgBqI,IACrBvI,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,wBAAgBsI,IACrBxI,EAAAC,EAAAC,cAAA,UACIC,UAAU,8DACVG,QAxByC,SAAAyE,GAAA,OAAAgE,EAAA9D,MAAArD,KAAAa,YAyBzCyG,SAAUR,GAEbA,EAAU,UAAY,YCTxBS,MAlBf,SAAAzJ,GAA2B,IAARyC,EAAQzC,EAARyC,KAEf,OAAOA,EACHnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACVgC,EAAK6B,IAAI,SAAAoF,GAAG,OACTpJ,EAAAC,EAAAC,cAACmJ,EAAD,CACI9G,IAAK6G,EAAI/G,GACTA,GAAI+G,EAAI/G,GACRH,MAAOkH,EAAIlH,MACXqG,OAAQa,EAAIb,OACZC,OAAQY,EAAIZ,OACZC,YAAaW,EAAIX,iBAI5BzI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqJ,SAAA,wxMCcMC,MA3Bf,WAAmB,IAAAxG,EACSC,mBAAS,IADlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACRZ,EADQc,EAAA,GACFuG,EADEvG,EAAA,YAAA4E,IAAA,OAAAA,EAAA3E,OAAAgC,EAAA,EAAAhC,CAAAuG,IAAArE,KAWf,SAAA2C,EAAsB7F,GAAtB,IAAAC,EAAA,OAAAsH,IAAAjE,KAAA,SAAAwC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACqBjF,EAASiJ,QAAQxH,GADtC,OACQC,EADR6F,EAAApC,KAEI4D,EAAQrH,GAFZ,wBAAA6F,EAAAjC,SAAAgC,OAXe9C,MAAArD,KAAAa,WAgBf,OAbAa,oBAAU,WAAM,SAAAqG,IAAA,OAAAA,EAAAzG,OAAAgC,EAAA,EAAAhC,CAAAuG,IAAArE,KACZ,SAAAC,IAAA,IAAAlD,EAAA,OAAAsH,IAAAjE,KAAA,SAAAlE,GAAA,cAAAA,EAAAmE,KAAAnE,EAAAoE,MAAA,cAAApE,EAAAoE,KAAA,EACqBjF,EAASmJ,aAD9B,OACQzH,EADRb,EAAAsE,KAEI4D,EAAQrH,GAFZ,wBAAAb,EAAAyE,SAAAV,OADYJ,MAAArD,KAAAa,YAAA,WAAAkH,EAAA1E,MAAArD,KAAAa,WAKZiH,KASA1J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAACkI,EAAD,CAAYd,QAlBL,SAAAvC,GAAA,OAAA8C,EAAA5C,MAAArD,KAAAa,cAmBNN,EAAKO,OACA1C,EAAAC,EAAAC,cAAC2J,EAAD,CAAS1H,KAAMA,IACfnC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,yyMC2FH2J,MAhHf,WAAuB,IAAAlB,EACqB/I,qBAAWP,GAA3CM,EADWgJ,EACXhJ,YAAamK,EADFnB,EACEmB,eADFhH,EAEaC,mBAAS,CACrCS,UAAW7D,EAAY6D,UACvBW,SAAUxE,EAAYwE,SACtBC,MAAOzE,EAAYyE,MACnB7D,SAAUZ,EAAYY,SACtB2D,SAAU,KAPKlB,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEZuB,EAFYrB,EAAA,GAEFsB,EAFEtB,EAAA,GAAAuB,EASgBxB,mBAAS,IATzByB,EAAAvB,OAAAC,EAAA,EAAAD,CAAAsB,EAAA,GASZE,EATYD,EAAA,GASAuF,EATAvF,EAAA,GAAAwF,EAUuBjH,oBAAS,GAVhCkH,EAAAhH,OAAAC,EAAA,EAAAD,CAAA+G,EAAA,GAUZE,EAVYD,EAAA,GAUGE,EAVHF,EAAA,YAAAlF,IAAA,OAAAA,EAAA9B,OAAAgC,EAAA,EAAAhC,CAAAmH,IAAAjF,KAYnB,SAAAC,EAA4BC,GAA5B,IAAA3E,EAAAH,EAAA8J,EAAA,OAAAD,IAAA7E,KAAA,SAAAlE,GAAA,cAAAA,EAAAmE,KAAAnE,EAAAoE,MAAA,cACIJ,EAAMK,iBACFhF,EAAO,CACP8C,UAAWa,EAASb,UACpBW,SAAUE,EAASF,SACnBC,MAAOC,EAASD,MAChBF,SAAUG,EAASH,UAGnB3D,EAAW8D,EAAS9D,SAT5Bc,EAAAmE,KAAA,EAAAnE,EAAAoE,KAAA,EAakCjF,EAAS8J,YAAY/J,EAAUG,GAbjE,OAaQ2J,EAbRhJ,EAAAsE,KAAAtE,EAAAoE,KAAA,uBAAApE,EAAAmE,KAAA,EAAAnE,EAAAC,GAAAD,EAAA,SAeQ0I,EAAY1I,EAAAC,IAfpBD,EAAA2H,OAAA,kBAmBI1E,EAAY,SAAAiG,GAAC,OAAAtH,OAAAkD,EAAA,EAAAlD,CAAA,GAASsH,EAAT,CAAYrG,SAAU,OACnC6F,EAAa,IACbI,GAAiB,GACjBL,EAAeO,GAtBnB,yBAAAhJ,EAAAyE,SAAAV,EAAA,kBAZmBJ,MAAArD,KAAAa,WAsCnB,SAASuD,EAAaV,GAAO,IAAAW,EACDX,EAAMY,OAAtBpE,EADiBmE,EACjBnE,KAAMqE,EADWF,EACXE,MACd5B,EAAY,SAAA5D,GAAI,OAAAuC,OAAAkD,EAAA,EAAAlD,CAAA,GACTvC,EADSuC,OAAAmD,EAAA,EAAAnD,CAAA,GAEXpB,EAAOqE,MAEZ6D,EAAa,IAGjB,OACIhK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yDACXH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,YACKiK,EACKnK,EAAAC,EAAAC,cAACsG,EAAD,CAAO5C,KAAK,UAAUE,SAAU,CAAC,oBACjC,KAEN9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAA0BmE,EAAS9D,WAEpDR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SACI4B,KAAK,YACL3B,UAAU,eACVgG,MAAO7B,EAASb,UAChB8C,SAAUP,KAGlBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SACI4B,KAAK,WACL3B,UAAU,eACVgG,MAAO7B,EAASF,SAChBmC,SAAUP,KAGlBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACI4B,KAAK,QACL3B,UAAU,eACVgG,MAAO7B,EAASD,MAChBkC,SAAUP,KAGlBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,kDACAF,EAAAC,EAAAC,cAAA,SACI4B,KAAK,WACL8B,KAAK,WACLzD,UAAU,eACVgG,MAAO7B,EAASH,SAChBoC,SAAUP,KAIjBtB,EAAWhC,OACN1C,EAAAC,EAAAC,cAACsG,EAAD,CAAO5C,KAAK,SAASE,SAAUY,IAC/B,KAGN1E,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iCAAiCG,QAxGpD,SAAAyE,GAAA,OAAAC,EAAAC,MAAArD,KAAAa,aAwGC,syMCnFTgI,MArBf,WAAyB,IACbzI,EAAW0I,cAAX1I,OADae,EAESC,mBAAS,IAFlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEdd,EAFcgB,EAAA,GAEL0H,EAFK1H,EAAA,GAYrB,OARAK,oBAAU,WAAM,SAAAsH,IAAA,OAAAA,EAAA1H,OAAAgC,EAAA,EAAAhC,CAAA2H,IAAAzF,KACZ,SAAAC,IAAA,IAAApD,EAAA,OAAA4I,IAAArF,KAAA,SAAAlE,GAAA,cAAAA,EAAAmE,KAAAnE,EAAAoE,MAAA,cAAApE,EAAAoE,KAAA,EACwBjF,EAASqK,WAAW9I,GAD5C,OACQC,EADRX,EAAAsE,KAEI+E,EAAW1I,GAFf,wBAAAX,EAAAyE,SAAAV,OADYJ,MAAArD,KAAAa,YAAA,WAAAmI,EAAA3F,MAAArD,KAAAa,WAKZqI,IACD,CAAC9I,IAGAhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACXH,EAAAC,EAAAC,cAAA,kBAAU+B,EAAQH,MAClB9B,EAAAC,EAAAC,cAAA,SAAI+B,EAAQ4E,aACX5E,EAAUjC,EAAAC,EAAAC,cAAC2J,EAAD,CAAS1H,KAAMF,EAAQE,OAAWnC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqJ,SAAA,yxMCLlD,IAAMyB,EAAmB,cAqFjBC,MAnFf,WAAe,IAAAjI,EACyBC,mBAAS,MADlCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNnD,EADMqD,EAAA,GACO8G,EADP9G,EAAA,GAAAgI,EAEa3I,EAAayI,GAF1BG,EAAAhI,OAAAC,EAAA,EAAAD,CAAA+H,EAAA,GAEN/J,EAFMgK,EAAA,GAECC,EAFDD,EAAA,GAAA1G,EAG+BxB,mBAAS,IAAIoI,IAAI,KAHhD3G,EAAAvB,OAAAC,EAAA,EAAAD,CAAAsB,EAAA,GAGN6G,EAHM5G,EAAA,GAGU6G,EAHV7G,EAAA,YAAA8G,IAAA,OAAAA,EAAArI,OAAAgC,EAAA,EAAAhC,CAAAsI,IAAApG,KAsBb,SAAA2C,EAAsBpH,GAAtB,IAAA8K,EAAA,OAAAD,IAAAhG,KAAA,SAAAwC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAvC,KAAA,EAAAuC,EAAAtC,KAAA,EAEsBjF,EAASyD,OAAOvD,GAFtC,cAEQO,EAFR8G,EAAApC,KAGIuF,EAASjK,GAHb8G,EAAAiB,OAAA,SAIW,CAAEpD,SAAS,IAJtB,cAAAmC,EAAAvC,KAAA,EAAAuC,EAAAzG,GAAAyG,EAAA,SAMIlI,QAAQuB,MAAM,gBAAd2G,EAAAzG,IANJyG,EAAAiB,OAAA,SAOW,CAAEpD,SAAS,EAAOC,OAAMkC,EAAAzG,KAPnC,yBAAAyG,EAAAjC,SAAAgC,EAAA,kBAtBa9C,MAAArD,KAAAa,WAAA,SAAAiJ,IAAA,OAAAA,EAAAxI,OAAAgC,EAAA,EAAAhC,CAAAsI,IAAApG,KAiCb,SAAAuG,EAAqBhL,GAArB,IAAAiL,EAAA,OAAAJ,IAAAhG,KAAA,SAAAqG,GAAA,cAAAA,EAAApG,KAAAoG,EAAAnG,MAAA,cAAAmG,EAAApG,KAAA,EAAAoG,EAAAnG,KAAA,EAEsBjF,EAASiG,MAAM/F,GAFrC,cAEQO,EAFR2K,EAAAjG,KAGIuF,EAASjK,GAHb2K,EAAA5C,OAAA,SAIW,CAAEpD,SAAS,IAJtB,cAAAgG,EAAApG,KAAA,EAAAoG,EAAAtK,GAAAsK,EAAA,SAMI/L,QAAQuB,MAAM,eAAdwK,EAAAtK,IANJsK,EAAA5C,OAAA,SAOW,CAAEpD,SAAS,EAAOC,OAAM+F,EAAAtK,KAPnC,yBAAAsK,EAAA9F,SAAA4F,EAAA,kBAjCa1G,MAAArD,KAAAa,WAiDb,SAASoG,EAAgBxG,GACvB,OAAOgJ,EAAeS,IAAIzJ,GAS5B,OAtDAiB,oBAAU,WAA+B,SAAAyI,IAAA,OAAAA,EAAA7I,OAAAgC,EAAA,EAAAhC,CAAAsI,IAAApG,KACvC,SAAAC,IAAA,IAAA2G,EAAAxL,EAAAyL,EAAA,OAAAT,IAAAhG,KAAA,SAAAlE,GAAA,cAAAA,EAAAmE,KAAAnE,EAAAoE,MAAA,WACKxE,EADL,CAAAI,EAAAoE,KAAA,gBAAApE,EAAAmE,KAAA,EAAAuG,EAGyBE,IAAIC,OAAOjL,GAAxBV,EAHZwL,EAGYxL,SACNC,EAASS,MAAQA,EAJvBI,EAAAoE,KAAA,EAK8BjF,EAAS2L,eAAe5L,GALtD,OAKUZ,EALV0B,EAAAsE,KAMMmE,EAAenK,GANrB0B,EAAAoE,KAAA,iBAAApE,EAAAmE,KAAA,GAAAnE,EAAAC,GAAAD,EAAA,SAQMxB,QAAQuB,MAAM,iCAAdC,EAAAC,IACAwI,EAAe,MATrB,yBAAAzI,EAAAyE,SAAAV,EAAA,mBADuCJ,MAAArD,KAAAa,YAAA,WAAAsJ,EAAA9G,MAAArD,KAAAa,WAcvC2J,IACC,CAAClL,IAwCAlB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACmM,EAAYC,SAAb,CACEnG,MAAO,CAAEvG,cAAamK,iBAAgBlB,kBAAiBC,WAT/D,SAAoBzG,GACdwG,EAAgBxG,KACpB5B,EAASqI,WAAWlJ,EAAYY,SAAU6B,GAC1CiJ,EAAkB,IAAIF,IAAJ,GAAAnK,OAAAiC,OAAAqJ,EAAA,EAAArJ,CAAYmI,GAAZ,CAA4BhJ,UAQxCrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACsM,EAAD,CAAQ7M,OArBlB,WACEoK,EAAe,MACfoB,EAAS,SAoBDnL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACuM,EAAA,EAAD,KACEzM,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS5M,EAAAC,EAAAC,cAAC2M,EAAD,QAC/B7M,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,QAAS5M,EAAAC,EAAAC,cAAC4M,EAAD,CAAY5I,OArElD,SAAAa,GAAA,OAAAwG,EAAAtG,MAAArD,KAAAa,gBAsECzC,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,QAAS5M,EAAAC,EAAAC,cAAC6M,EAAD,CAAWrG,MAtEhD,SAAAsG,GAAA,OAAAtB,EAAAzG,MAAArD,KAAAa,gBAuECzC,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,QAAS5M,EAAAC,EAAAC,cAAC+M,EAAD,QACxCjN,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,qBAAqBC,QAAS5M,EAAAC,EAAAC,cAACgN,EAAD,QAChDlN,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,QAAS5M,EAAAC,EAAAC,cAACiN,EAAD,QACnCnN,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,QAAS5M,EAAAC,EAAAC,cAACkN,EAAD,cChFlCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3N,EAAAC,EAAAC,cAAC0N,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.aff7d794.chunk.js","sourcesContent":["import React from 'react'\n\nconst UserContext = React.createContext()\n\nexport default UserContext\n","import React, { useContext } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport UserContext from './auth/UserContext'\n\nfunction NavBar({logout}) {\n    const { currentUser } = useContext(UserContext)\n    console.debug('Navigation', 'currentUser=', currentUser)\n\n    return(\n        <nav className='NavBar navbar navbar-expand-md'>\n            <Link className='navbar-brand' to='/'>\n                Jobly\n            </Link>\n            {currentUser\n                //  If there is a currentUser then show Companies, Jobs, Profile, and Log out.\n                ? <ul className='narvbar-nav ml-auto'>\n                    <li className=\"nav-item mr-4\">\n                        <NavLink className=\"nav-link\" to=\"/companies\">\n                        Companies\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item mr-4\">\n                        <NavLink className=\"nav-link\" to=\"/jobs\">\n                        Jobs\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item mr-4\">\n                        <NavLink className=\"nav-link\" to=\"/profile\">\n                        Profile\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/\" onClick={logout}>\n                        Log out {currentUser.first_name || currentUser.username}\n                        </Link>\n                    </li>\n                </ul>\n                // Otherwise show Log in and Sign up. \n                : <ul className='navbar-nav ml-auto'>\n                    <li className=\"nav-item mr-4\">\n                        <NavLink className=\"nav-link\" to=\"/login\">\n                        Log in\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item mr-4\">\n                        <NavLink className=\"nav-link\" to=\"/signup\">\n                        Sign Up\n                        </NavLink>\n                    </li>\n                </ul>\n            }\n        </nav>\n    )\n}\n\nexport default NavBar\n","import axios from 'axios'\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || 'http://localhost:3001'\n\nclass JoblyApi {\n    static token\n\n    static async request(endpoint, data = {}, method = \"get\") {\n        console.debug(\"API Call:\", endpoint, data, method);\n    \n        const url = `${BASE_URL}/${endpoint}`;\n        const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n        const params = (method === \"get\")\n            ? data\n            : {};\n    \n        try {\n          return (await axios({ url, method, data, params, headers })).data;\n        } catch (err) {\n          console.error(\"API Error:\", err.response);\n          let message = err.response.data.error.message;\n          throw Array.isArray(message) ? message : [message];\n        }\n    }\n\n    static async signup(data) {\n        let response = await this.request('auth/register', data, 'post')\n        return response.token\n    }\n\n    static async login(data) {\n        let response = await this.request('auth/token', data, 'post')\n        return response.token\n    }\n\n    static async getCompanies(name) {\n        let response = await this.request('companies', {name})\n        return response.companies\n    }\n\n    static async getAllCompanies() {\n        let response = await this.request('companies')\n        return response.companies\n    }\n\n    static async getCompany(handle) {\n        let response = await this.request(`companies/${handle}`)\n        return response.company\n    }\n\n    static async getJobs(title) {\n        let response = await this.request('jobs', {title})\n        return response.jobs\n    }\n\n    static async getAllJobs() {\n        let response = await this.request('jobs')\n        return response.jobs\n    }\n\n    static async getCurrentUser(username) {\n        let response = await this.request(`users/${username}`)\n        return response.user\n    }\n\n    static async applyToJob(username, id) {\n        await this.request(`users/${username}/jobs/${id}`, {}, 'post')\n    }\n\n    static async saveProfile(username, data) {\n        let response = await this.request(`users/${username}`, data, 'patch')\n        return response.user\n    }\n}\n\nexport default JoblyApi\n","import { useState, useEffect } from \"react\";\n\nfunction LocalStorage(key, firstValue = null) {\n    const initialValue = localStorage.getItem(key) || firstValue;\n  \n    const [item, setItem] = useState(initialValue);\n  \n    useEffect(function setKeyInLocalStorage() {\n      console.debug(\"hooks useLocalStorage useEffect\", \"item=\", item);\n  \n      if (item === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, item);\n      }\n    }, [key, item]);\n  \n    return [item, setItem];\n  }\n\nexport default LocalStorage\n","import React, { useContext } from \"react\";\nimport UserContext from \"./auth/UserContext\";\nimport { Link } from 'react-router-dom'\n\nfunction Homepage() {\n    const { currentUser } = useContext(UserContext)\n    console.debug('Navigation', 'currentUser=', currentUser)\n\n    return(\n        <div className=\"Homepage\">\n            <div className=\"container text-center\">\n                <h1 className=\"mb-4 font-weight-bold\">Jobly</h1>\n                <p className=\"lead\">All the jobs in one, convenient place.</p>\n                {currentUser\n                    ? <h2> Welcome Back, {currentUser.firstName}!</h2>\n                    : (\n                        <p>\n                            <Link className='btn btn-primary font-weight-bold mr-3' to='/login'>Log in</Link>\n                            <Link className='btn btn-primary font-weight-bold mr-3' to='/signup'>Sign up</Link>\n                        </p>\n                    )\n                }\n            </div>\n        </div>\n    )\n    \n}\n\nexport default Homepage\n","import React from \"react\";\n\nfunction Alert({ type = 'danger', messages = []}) {\n    return (\n        <div className={`alert alert-${type}`} role=\"alert\">\n          {messages.map(error => (\n              <p className=\"mb-0 small\" key={error}>\n                {error}\n              </p>\n          ))}\n        </div>\n    );\n}\n\nexport default Alert;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Alert from \"../helpers/Alert\";\n\nfunction SignupForm({ signup }) {\n    const [formData, setFormData] = useState({\n        username: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n    })\n\n    const [formErrors, setFormErrors] = useState([])\n    const history = useNavigate()\n\n    async function handleSubmit(event) {\n        event.preventDefault()\n        let result = await signup(formData)\n        if (result.success) {\n            history('/companies')\n        } else {\n            setFormErrors(result.errors)\n        }\n    }\n\n    function handleChange(event) {\n        const { name, value } = event.target\n        setFormData(data => ({ ...data, [name]: value}))\n    }\n\n    return (\n        <div className=\"SignupForm\">\n            <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n                <h2 className=\"mb-3\">Sign Up</h2>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"form-group\">\n                                <label>Username</label>\n                                <input \n                                    name=\"username\"\n                                    className=\"form-control\"\n                                    value={formData.username}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input \n                                    name=\"password\"\n                                    type='password'\n                                    className=\"form-control\"\n                                    value={formData.password}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>First Name</label>\n                                <input \n                                    name=\"firstName\"\n                                    className=\"form-control\"\n                                    value={formData.firstName}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Last Name</label>\n                                <input \n                                    name=\"lastName\"\n                                    className=\"form-control\"\n                                    value={formData.lastName}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Email</label>\n                                <input \n                                    name=\"email\"\n                                    type='email'\n                                    className=\"form-control\"\n                                    value={formData.email}\n                                    onChange={handleChange}\n                                />\n                            </div>\n\n                            {formErrors.length\n                                ? <Alert type='danger' messages={formErrors} />\n                                : null\n                            }\n\n                            <button \n                                type=\"submit\"\n                                className=\"btn btn-primary float-right\"\n                                onSubmit={handleSubmit}\n                            >Submit</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SignupForm\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Alert from \"../helpers/Alert\";\n\nfunction LoginForm({ login }) {\n    const [formData, setFormData] = useState({\n        username: '',\n        password: ''\n    })\n\n    const [formErrors, setFormErrors] = useState([])\n    const history = useNavigate()\n\n    async function handleSubmit(event) {\n        event.preventDefault()\n        let result = await login(formData)\n        if (result.success) {\n            history('/companies')\n        } else {\n            setFormErrors(result.errors)\n        }\n    }\n\n    function handleChange(event) {\n        const { name, value } = event.target\n        setFormData(data => ({ ...data, [name]: value}))\n    }\n\n    return (\n        <div className=\"LoginForm\">\n            <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n                <h2 className=\"mb-3\">Sign Up</h2>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"form-group\">\n                                <label>Username</label>\n                                <input \n                                    name=\"username\"\n                                    className=\"form-control\"\n                                    value={formData.username}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input \n                                    name=\"password\"\n                                    type='password'\n                                    className=\"form-control\"\n                                    value={formData.password}\n                                    onChange={handleChange}\n                                />\n                            </div>\n\n                            {formErrors.length\n                                ? <Alert type='danger' messages={formErrors} />\n                                : null\n                            }\n\n                            <button \n                                type=\"submit\"\n                                className=\"btn btn-primary float-right\"\n                                onSubmit={handleSubmit}\n                            >Submit</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginForm\n","import React from \"react\";\nimport { Link } from 'react-router-dom'\n\nfunction CompanyCard({name, handle, description, logo_url}) {\n    return (\n        <Link className=\"CompanyCard card\" to={`/companies/${handle}`}>\n            <div className=\"card-body\">\n                <h6 className=\"card-title\">\n                    {name}\n                    {logo_url && <img src={logo_url} alt={name} className='float-right ml-5' />}\n                </h6>\n                <p><small>{description}</small></p>\n            </div>\n        </Link>\n    )\n}\n\nexport default CompanyCard;\n","import React from \"react\";\nimport CompanyCard from \"./CompanyCard\";\n\nfunction CompanyList({ companies }) {\n    return (\n        <div className=\"CompanyList\">\n            {companies.map(c => (\n                <CompanyCard\n                    key={c.handle}\n                    handle={c.handle}\n                    name={c.name}\n                    description={c.description}\n                    logoUrl={c.logoUrl}\n                />\n            ))}\n        </div>\n    )\n}\n\nexport default CompanyList\n","import React, { useState } from \"react\";\n\nfunction SearchForm({ content }) {\n    const [seachTerm, setSearchTerm] = useState('')\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        content(seachTerm.trim() || undefined)\n        setSearchTerm(seachTerm.trim())\n    }\n\n    function handleChange(event) {\n        setSearchTerm(event.target.value)\n    }\n\n    return(\n        <div className=\"SearchForm mb-4\">\n            <form className=\"fomr-inline\" onSubmit={handleSubmit}>\n                <input \n                    className=\"form-control form-control-lg flex-grow-1\"\n                    name='searchTerm'\n                    value={seachTerm}\n                    onChange={handleChange}\n                />\n                <button type=\"submit\" className=\"btn btn-lg btn-primary\">Search</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchForm\n","import React, { useEffect, useState } from \"react\";\nimport JoblyApi from \"../Api\";\nimport CompanyList from \"./CompanyList\";\nimport SearchForm from \"../SearchForm\";\n\n\nfunction CompanyPage() {\n    const [companies, setCompanies] = useState([])\n\n    useEffect(function getCompaniesOnMount() {\n        search()\n    }, [])\n\n    useEffect(() => {\n        async function getCompanies() {\n            let companies = await JoblyApi.getAllCompanies()\n            setCompanies(companies)\n        }\n        getCompanies()\n    })\n\n    async function search(name) {\n        let companies = await JoblyApi.getCompanies(name)\n        setCompanies(companies)\n    }\n\n    return (\n        <div className=\"CompanyPage col-md-8 offset-md-2\">\n            <SearchForm content={search} />\n            {companies.length\n                ? <CompanyList companies={companies} />\n                : <p className=\"lead\">Sorry! No results.</p>\n            }\n            \n        </div>\n    )\n}\n\nexport default CompanyPage\n","import React, { useContext, useEffect, useState } from \"react\";\nimport UserContext from \"../auth/UserContext\";\n\nfunction JobCard({ title, salary, equity, companyName, id }) {\n    const [applied, setApplied] = useState()\n    const { hasAppliedToJob, applyToJob} = useContext(UserContext)\n\n    useEffect(() => {\n        setApplied(hasAppliedToJob(id))\n    }, [id, hasAppliedToJob])\n\n    async function handleClick(event) {\n        event.preventDefault()\n        if(hasAppliedToJob(id)) return\n        applyToJob(id)\n        setApplied(true)\n    }\n\n    return (\n        <div className=\"JobCard card\">\n            <div className=\"card-body\">\n                <h6 className=\"card-title\">{title}</h6>\n                {companyName}\n                <div><small>Salary: {salary}</small></div>\n                <div><small>Equity: {equity}</small></div>\n                <button \n                    className=\"btn btn-danger font-weight-bold text-uppsercase float-right\"\n                    onClick={handleClick}\n                    disabled={applied}\n                >\n                {applied ? 'Applied' : 'Apply'}\n                </button>\n            </div>\n        </div>\n    )\n} \n\nexport default JobCard\n","import React from \"react\";\nimport JobCard from \"./JobCard\";\n\nfunction JobList({ jobs }) {\n    \n    return jobs ? (\n        <div className=\"JobList\">\n            {jobs.map(job => (\n                <JobCard\n                    key={job.id}\n                    id={job.id}\n                    title={job.title}\n                    salary={job.salary}\n                    equity={job.equity}\n                    companyName={job.companyName}\n                />\n            ))}\n        </div>\n    ) : (<></>)\n}\n\nexport default JobList\n","import React, { useEffect, useState } from \"react\";\nimport JoblyApi from \"../Api\";\nimport JobList from \"./JobList\";\nimport SearchForm from \"../SearchForm\";\n\nfunction JobPage() {\n    const [jobs, setJobs] = useState([])\n\n    useEffect(() => {\n        async function getJobs() {\n            let jobs = await JoblyApi.getAllJobs()\n            setJobs(jobs)\n        }\n        getJobs()\n    })\n\n    async function search(title) {\n        let jobs = await JoblyApi.getJobs(title)\n        setJobs(jobs)\n    }\n\n    return (\n        <div className=\"JobList col-md-8 offset-md-2\">\n            <SearchForm content={search} />\n            {jobs.length\n                ? <JobList jobs={jobs} />\n                : <p className=\"lead\">Sorry! No results.</p>\n            }\n        </div>\n    )\n}\n\nexport default JobPage\n","import React, { useContext, useState } from \"react\";\nimport JoblyApi from \"../Api\";\nimport UserContext from \"../auth/UserContext\";\nimport Alert from \"../helpers/Alert\";\n\nfunction ProfileForm() {\n    const { currentUser, setCurrentUser } = useContext(UserContext)\n    const [formData, setFormData] = useState({\n        firstName: currentUser.firstName,\n        lastName: currentUser.lastName,\n        email: currentUser.email,\n        username: currentUser.username,\n        password: '',\n    })\n    const [formErrors, setFormError] = useState([])\n    const [saveConfirmed, setSaveConfirmed] = useState(false)\n\n    async function handleSubmit(event) {\n        event.preventDefault()\n        let data = {\n            firstName: formData.firstName,\n            lastName: formData.lastName,\n            email: formData.email,\n            password: formData.password,\n        }\n\n        let username = formData.username\n        let updateUserProfile\n\n        try{\n            updateUserProfile = await JoblyApi.saveProfile(username, data)\n        } catch (errors) {\n            setFormError(errors)\n            return\n        }\n\n        setFormData(d => ({...d, password: ''}))\n        setFormError([])\n        setSaveConfirmed(true)\n        setCurrentUser(updateUserProfile)\n    }\n\n\n    function handleChange(event) {\n        const { name, value } = event.target\n        setFormData(data => ({\n            ...data,\n            [name]: value,\n        }))\n        setFormError([])\n    }\n\n    return (\n        <div className=\"ProfileForm col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\n            <h3>Profile</h3>\n            <div className=\"Card\">\n                <div className=\"card-body\">\n                    <form>\n                        {saveConfirmed\n                            ? <Alert type='success' messages={['Changes saved!']} />\n                            : null\n                        }\n                        <div className=\"form-group\">\n                            <label>Username</label>\n                            <p className=\"form-control-plaintext\">{formData.username}</p>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>First Name</label>\n                            <input \n                                name='firstName'\n                                className=\"form-control\"\n                                value={formData.firstName}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Last Name</label>\n                            <input \n                                name='lastName'\n                                className=\"form-control\"\n                                value={formData.lastName}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Email</label>\n                            <input \n                                name='email'\n                                className=\"form-control\"\n                                value={formData.email}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Confirm password to make changes:</label>\n                            <input \n                                name='password'\n                                type='password'\n                                className=\"form-control\"\n                                value={formData.password}\n                                onChange={handleChange}\n                            />\n                        </div>\n\n                        {formErrors.length\n                            ? <Alert type='danger' messages={formErrors} />\n                            : null\n                        }\n\n                        <button className=\"btn btn-primary btn-block mt-4\" onClick={handleSubmit}>Save Changes</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileForm\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport JoblyApi from \"../Api\";\nimport JobList from \"../jobs/JobList\";\n\nfunction CompanyDetail() {\n    const { handle } = useParams()\n    const [company, setCompany] = useState([])\n\n    useEffect(() => {\n        async function getCompany() {\n            let company = await JoblyApi.getCompany(handle)\n            setCompany(company)\n        }\n        getCompany()\n    }, [handle])\n\n    return (\n        <div className=\"CompanyDetail col-md-8 offset-md-2\">\n            <h4>HELLO{company.name}</h4>\n            <p>{company.description}</p>\n            {company ? <JobList jobs={company.jobs} /> : <></>}\n        </div>\n    )\n}\n\nexport default CompanyDetail\n","import './App.css';\nimport React, {useEffect, useState} from 'react';\nimport NavBar from './NavBar';\nimport {Route, Routes, BrowserRouter} from 'react-router-dom'\nimport jwt from 'jsonwebtoken'\nimport JoblyApi from './Api.js'\nimport LocalStorage from './helpers/LocalStorage';\nimport Homepage from './Homepage';\nimport UserContext from './auth/UserContext';\nimport SignupForm from './auth/SignupForm';\nimport LoginForm from './auth/LoginForm';\nimport CompanyPage from './companies/CompanyPage';\nimport JobPage from './jobs/JobPage';\nimport ProfileForm from './profiles/ProfileForm';\nimport CompanyDetail from './companies/CompanyDetail';\n\nexport const TOKEN_STORAGE_ID = 'jobly-token'\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [token, setToken] = LocalStorage(TOKEN_STORAGE_ID)\n  const [applicationIds, setApplicationIds] = useState(new Set([]))\n\n  useEffect(function loadCurrentUserInfo() {\n    async function getCurrentUser() {\n      if(token) {\n        try{\n          let { username } = jwt.decode(token)\n          JoblyApi.token = token\n          let currentUser = await JoblyApi.getCurrentUser(username)\n          setCurrentUser(currentUser)\n        } catch(err) {\n          console.error('Can not load current user info', err)\n          setCurrentUser(null)\n        }\n      }\n    }\n    getCurrentUser()\n  }, [token])\n\n  async function signup(data) {\n    try{\n      let token = await JoblyApi.signup(data)\n      setToken(token)\n      return { success: true }\n    } catch(errors) {\n      console.error('signup failed', errors)\n      return { success: false, errors}\n    }\n  }\n\n  async function login(data) {\n    try{\n      let token = await JoblyApi.login(data)\n      setToken(token)\n      return { success: true }\n    } catch(errors) {\n      console.error('login failed', errors)\n      return { success: false, errors}\n    }\n  }\n\n  function logout() {\n    setCurrentUser(null)\n    setToken(null)\n  }\n\n  function hasAppliedToJob(id) {\n    return applicationIds.has(id)\n  }\n\n  function applyToJob(id) {\n    if (hasAppliedToJob(id)) return \n    JoblyApi.applyToJob(currentUser.username, id)\n    setApplicationIds(new Set([...applicationIds, id]))\n  }\n\n  return (\n      <BrowserRouter>\n        <UserContext.Provider\n          value={{ currentUser, setCurrentUser, hasAppliedToJob, applyToJob }}\n        >\n          <div className=\"App\">\n            <NavBar logout={logout}/>\n            <div className='pt-5'>\n              <Routes>\n                <Route exact path='/' element={<Homepage />} />\n                <Route exact path='/signup' element={<SignupForm signup={signup}/>} />\n                <Route exact path='/login' element={<LoginForm login={login}/>} />\n                <Route exact path='/companies' element={<CompanyPage />} />\n                <Route exact path='/companies/:handle' element={<CompanyDetail />} />\n                <Route exact path='/jobs' element={<JobPage />} />\n                <Route exact path='/profile' element={<ProfileForm />} />\n              </Routes>\n            </div>\n          </div>\n        </UserContext.Provider>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}